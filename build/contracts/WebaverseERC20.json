{
  "contractName": "WebaverseERC20",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "cap",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "a",
          "type": "address"
        }
      ],
      "name": "isAllowedMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "a",
          "type": "address"
        }
      ],
      "name": "addAllowedMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "a",
          "type": "address"
        }
      ],
      "name": "removeAllowedMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"addAllowedMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"isAllowedMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"removeAllowedMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addAllowedMinter(address)\":{\"details\":\"Add an account to the list of accounts allowed to create ERC20 tokens\",\"params\":{\"a\":\"address to whitelist\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"constructor\":{\"details\":\"Create a new fungible token\",\"params\":{\"cap\":\"Sets the token market cap. This value is immutable, it can only be set once during construction. Default cap: 2147483648000000000000000000 or (2**31) + '000000000000000000'\",\"name\":\"Name of the token (default is FT)\",\"symbol\":\"Token identifier (default is SILK)\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"isAllowedMinter(address)\":{\"details\":\"Test if an address is allowed to mint ERC20 tokens\",\"params\":{\"a\":\"address to test\"},\"returns\":{\"_0\":\"true if address is allowed to mint\"}},\"mint(address,uint256)\":{\"details\":\"Mint ERC20 tokens\",\"params\":{\"account\":\"Tokens created for this account\",\"amount\":\"Number of tokens to mint\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"removeAllowedMinter(address)\":{\"details\":\"Remove an account from the list of accounts allowed to create ERC20 tokens\",\"params\":{\"a\":\"address to remove from whitelist\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"title\":\"Extension of {ERC20} that adds a cap to the supply of tokens. \",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/beast/Documents/GitHub/contracts/ethereum/WebaverseERC20.sol\":\"WebaverseERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/beast/Documents/GitHub/contracts/ethereum/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"/home/beast/Documents/GitHub/contracts/ethereum/ERC20.sol\":{\"keccak256\":\"0x3d0eb49ca9313ec4be88633da0a2a82d5b077e055fa6b9bb1b952b1e79908230\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://737b321685eabd057543360689d4269b89e0400a6d86a56b9d50da0d9847a4a6\",\"dweb:/ipfs/QmSH1iCaf6LbDA49wxBK86qHmQZuWWKymckKZQx6PQrGx3\"]},\"/home/beast/Documents/GitHub/contracts/ethereum/ERC20Capped.sol\":{\"keccak256\":\"0x5aaccf6ec2a07b1c8cc31b3a91c95d996d4e3cadc58d0cce465d5436d868fa1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://290193c353fafb468c6ada98fc5e9f06fc61d8ec5dbcc874203921d7bf6a94db\",\"dweb:/ipfs/QmYE11CtUMwpSAvnDA7Qj9UEqeZPbRL4dVxFJTby8zqp3T\"]},\"/home/beast/Documents/GitHub/contracts/ethereum/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"/home/beast/Documents/GitHub/contracts/ethereum/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"/home/beast/Documents/GitHub/contracts/ethereum/WebaverseERC20.sol\":{\"keccak256\":\"0x504bd0e2b2592d8f14cc8c6e86c8a814660031fe8347174d97f9bf9291e31a6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e4f4e8bfb02876deb34ef145a8fb62ba124aeb1fdc624bddb094b90e2af8383\",\"dweb:/ipfs/QmXmSVUH1ZoNNeeK1qoJNoRoVKjBZKuHyVJomgXpCMyEY1\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001d3e38038062001d3e833981810160405260608110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b50604052602001805190602001909291905050508083838160039080519060200190620001dd929190620002fd565b508060049080519060200190620001f6929190620002fd565b506012600560006101000a81548160ff021916908360ff1602179055505050600081116200028c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f45524332304361707065643a206361702069732030000000000000000000000081525060200191505060405180910390fd5b80600681905550506001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600881905550505050620003a3565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200034057805160ff191683800117855562000371565b8280016001018555821562000371579182015b828111156200037057825182559160200191906001019062000353565b5b50905062000380919062000384565b5090565b5b808211156200039f57600081600090555060010162000385565b5090565b61198b80620003b36000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806340c10f1911610097578063a457c2d711610066578063a457c2d7146104f8578063a9059cbb1461055c578063bad39b96146105c0578063dd62ed3e1461060457610100565b806340c10f191461038b578063488603df146103d957806370a082311461041d57806395d89b411461047557610100565b806323b872dd116100d357806323b872dd14610264578063313ce567146102e8578063355274ea14610309578063395093511461032757610100565b806306fdde0314610105578063095ea7b31461018857806318160ddd146101ec5780631f3b4c901461020a575b600080fd5b61010d61067c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561014d578082015181840152602081019050610132565b50505050905090810190601f16801561017a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101d46004803603604081101561019e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061071e565b60405180821515815260200191505060405180910390f35b6101f461073c565b6040518082815260200191505060405180910390f35b61024c6004803603602081101561022057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610746565b60405180821515815260200191505060405180910390f35b6102d06004803603606081101561027a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061079c565b60405180821515815260200191505060405180910390f35b6102f0610875565b604051808260ff16815260200191505060405180910390f35b61031161088c565b6040518082815260200191505060405180910390f35b6103736004803603604081101561033d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610896565b60405180821515815260200191505060405180910390f35b6103d7600480360360408110156103a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610949565b005b61041b600480360360208110156103ef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109d2565b005b61045f6004803603602081101561043357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b37565b6040518082815260200191505060405180910390f35b61047d610b7f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104bd5780820151818401526020810190506104a2565b50505050905090810190601f1680156104ea5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105446004803603604081101561050e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c21565b60405180821515815260200191505060405180910390f35b6105a86004803603604081101561057257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cee565b60405180821515815260200191505060405180910390f35b610602600480360360208110156105d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d0c565b005b6106666004803603604081101561061a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ee8565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107145780601f106106e957610100808354040283529160200191610714565b820191906000526020600020905b8154815290600101906020018083116106f757829003601f168201915b5050505050905090565b600061073261072b610f6f565b8484610f77565b6001905092915050565b6000600254905090565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60006107a984848461116e565b61086a846107b5610f6f565b610865856040518060600160405280602881526020016118c060289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061081b610f6f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142f9092919063ffffffff16565b610f77565b600190509392505050565b6000600560009054906101000a900460ff16905090565b6000600654905090565b600061093f6108a3610f6f565b8461093a85600160006108b4610f6f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114ef90919063ffffffff16565b610f77565b6001905092915050565b61095233610746565b6109c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f73656e646572206973206e6f742061206d696e7465720000000000000000000081525060200191505060405180910390fd5b6109ce8282611577565b5050565b6109db33610746565b610a4d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f73656e646572206973206e6f742061206d696e7465720000000000000000000081525060200191505060405180910390fd5b610a5681610746565b15610ac9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f74617267657420697320616c72656164792061206d696e74657200000000000081525060200191505060405180910390fd5b6001600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610b2e60085460016114ef565b60088190555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c175780601f10610bec57610100808354040283529160200191610c17565b820191906000526020600020905b815481529060010190602001808311610bfa57829003601f168201915b5050505050905090565b6000610ce4610c2e610f6f565b84610cdf856040518060600160405280602581526020016119316025913960016000610c58610f6f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142f9092919063ffffffff16565b610f77565b6001905092915050565b6000610d02610cfb610f6f565b848461116e565b6001905092915050565b610d1533610746565b610d87576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f73656e646572206973206e6f742061206d696e7465720000000000000000000081525060200191505060405180910390fd5b610d9081610746565b610e02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f746172676574206973206e6f742061206d696e7465720000000000000000000081525060200191505060405180910390fd5b600160085411610e7a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f63616e6e6f742072656d6f766520746865206f6e6c79206d696e74657200000081525060200191505060405180910390fd5b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610edf600854600161173e565b60088190555050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ffd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061190d6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611083576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806118786022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156111f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806118e86025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561127a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806118556023913960400191505060405180910390fd5b611285838383611788565b6112f08160405180606001604052806026815260200161189a602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142f9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611383816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114ef90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906114dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156114a1578082015181840152602081019050611486565b50505050905090810190601f1680156114ce5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008082840190508381101561156d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561161a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61162660008383611788565b61163b816002546114ef90919063ffffffff16565b600281905550611692816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114ef90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600061178083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061142f565b905092915050565b61179383838361184f565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561184a57600654816117d461073c565b011115611849576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f45524332304361707065643a206361702065786365656465640000000000000081525060200191505060405180910390fd5b5b505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220363ff8f878692a5c1c25ae700b429f56590e4707673b96f071d1ce775569201664736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c806340c10f1911610097578063a457c2d711610066578063a457c2d7146104f8578063a9059cbb1461055c578063bad39b96146105c0578063dd62ed3e1461060457610100565b806340c10f191461038b578063488603df146103d957806370a082311461041d57806395d89b411461047557610100565b806323b872dd116100d357806323b872dd14610264578063313ce567146102e8578063355274ea14610309578063395093511461032757610100565b806306fdde0314610105578063095ea7b31461018857806318160ddd146101ec5780631f3b4c901461020a575b600080fd5b61010d61067c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561014d578082015181840152602081019050610132565b50505050905090810190601f16801561017a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101d46004803603604081101561019e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061071e565b60405180821515815260200191505060405180910390f35b6101f461073c565b6040518082815260200191505060405180910390f35b61024c6004803603602081101561022057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610746565b60405180821515815260200191505060405180910390f35b6102d06004803603606081101561027a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061079c565b60405180821515815260200191505060405180910390f35b6102f0610875565b604051808260ff16815260200191505060405180910390f35b61031161088c565b6040518082815260200191505060405180910390f35b6103736004803603604081101561033d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610896565b60405180821515815260200191505060405180910390f35b6103d7600480360360408110156103a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610949565b005b61041b600480360360208110156103ef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109d2565b005b61045f6004803603602081101561043357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b37565b6040518082815260200191505060405180910390f35b61047d610b7f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104bd5780820151818401526020810190506104a2565b50505050905090810190601f1680156104ea5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105446004803603604081101561050e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c21565b60405180821515815260200191505060405180910390f35b6105a86004803603604081101561057257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cee565b60405180821515815260200191505060405180910390f35b610602600480360360208110156105d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d0c565b005b6106666004803603604081101561061a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ee8565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107145780601f106106e957610100808354040283529160200191610714565b820191906000526020600020905b8154815290600101906020018083116106f757829003601f168201915b5050505050905090565b600061073261072b610f6f565b8484610f77565b6001905092915050565b6000600254905090565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60006107a984848461116e565b61086a846107b5610f6f565b610865856040518060600160405280602881526020016118c060289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061081b610f6f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142f9092919063ffffffff16565b610f77565b600190509392505050565b6000600560009054906101000a900460ff16905090565b6000600654905090565b600061093f6108a3610f6f565b8461093a85600160006108b4610f6f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114ef90919063ffffffff16565b610f77565b6001905092915050565b61095233610746565b6109c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f73656e646572206973206e6f742061206d696e7465720000000000000000000081525060200191505060405180910390fd5b6109ce8282611577565b5050565b6109db33610746565b610a4d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f73656e646572206973206e6f742061206d696e7465720000000000000000000081525060200191505060405180910390fd5b610a5681610746565b15610ac9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f74617267657420697320616c72656164792061206d696e74657200000000000081525060200191505060405180910390fd5b6001600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610b2e60085460016114ef565b60088190555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c175780601f10610bec57610100808354040283529160200191610c17565b820191906000526020600020905b815481529060010190602001808311610bfa57829003601f168201915b5050505050905090565b6000610ce4610c2e610f6f565b84610cdf856040518060600160405280602581526020016119316025913960016000610c58610f6f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142f9092919063ffffffff16565b610f77565b6001905092915050565b6000610d02610cfb610f6f565b848461116e565b6001905092915050565b610d1533610746565b610d87576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f73656e646572206973206e6f742061206d696e7465720000000000000000000081525060200191505060405180910390fd5b610d9081610746565b610e02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f746172676574206973206e6f742061206d696e7465720000000000000000000081525060200191505060405180910390fd5b600160085411610e7a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f63616e6e6f742072656d6f766520746865206f6e6c79206d696e74657200000081525060200191505060405180910390fd5b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610edf600854600161173e565b60088190555050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ffd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061190d6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611083576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806118786022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156111f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806118e86025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561127a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806118556023913960400191505060405180910390fd5b611285838383611788565b6112f08160405180606001604052806026815260200161189a602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142f9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611383816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114ef90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906114dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156114a1578082015181840152602081019050611486565b50505050905090810190601f1680156114ce5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008082840190508381101561156d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561161a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61162660008383611788565b61163b816002546114ef90919063ffffffff16565b600281905550611692816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114ef90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600061178083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061142f565b905092915050565b61179383838361184f565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561184a57600654816117d461073c565b011115611849576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f45524332304361707065643a206361702065786365656465640000000000000081525060200191505060405180910390fd5b5b505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220363ff8f878692a5c1c25ae700b429f56590e4707673b96f071d1ce775569201664736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "162:2374:44:-:0;;;733:222;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;869:3;843:4;849:6;2011:4:11;2003:5;:12;;;;;;;;;;;;:::i;:::-;;2035:6;2025:7;:16;;;;;;;;;;;;:::i;:::-;;2063:2;2051:9;;:14;;;;;;;;;;;;;;;;;;1931:141;;422:1:13;416:3;:7;408:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;466:3;459:4;:10;;;;365:111;913:4:44::2;884:14;:26;899:10;884:26;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;947:1;927:17;:21;;;;733:222:::0;;;162:2374;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "162:2374:44:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2137:81:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4173:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3180:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1122:104:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4806:317:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3039:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;555:73:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5518:215:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1597:106:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1844:230;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3336:117:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2331:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6220:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3656:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2232:302:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3886:149:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2137:81;2174:13;2206:5;2199:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2137:81;:::o;4173:166::-;4256:4;4272:39;4281:12;:10;:12::i;:::-;4295:7;4304:6;4272:8;:39::i;:::-;4328:4;4321:11;;4173:166;;;;:::o;3180:98::-;3233:7;3259:12;;3252:19;;3180:98;:::o;1122:104:44:-;1179:4;1202:14;:17;1217:1;1202:17;;;;;;;;;;;;;;;;;;;;;;;;;1195:24;;1122:104;;;:::o;4806:317:11:-;4912:4;4928:36;4938:6;4946:9;4957:6;4928:9;:36::i;:::-;4974:121;4983:6;4991:12;:10;:12::i;:::-;5005:89;5043:6;5005:89;;;;;;;;;;;;;;;;;:11;:19;5017:6;5005:19;;;;;;;;;;;;;;;:33;5025:12;:10;:12::i;:::-;5005:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;4974:8;:121::i;:::-;5112:4;5105:11;;4806:317;;;;;:::o;3039:81::-;3080:5;3104:9;;;;;;;;;;;3097:16;;3039:81;:::o;555:73:13:-;591:7;617:4;;610:11;;555:73;:::o;5518:215:11:-;5606:4;5622:83;5631:12;:10;:12::i;:::-;5645:7;5654:50;5693:10;5654:11;:25;5666:12;:10;:12::i;:::-;5654:25;;;;;;;;;;;;;;;:34;5680:7;5654:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5622:8;:83::i;:::-;5722:4;5715:11;;5518:215;;;;:::o;1597:106:44:-;1345:27;1361:10;1345:15;:27::i;:::-;1337:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1674:22:::1;1680:7;1689:6;1674:5;:22::i;:::-;1597:106:::0;;:::o;1844:230::-;1345:27;1361:10;1345:15;:27::i;:::-;1337:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1920:18:::1;1936:1;1920:15;:18::i;:::-;1919:19;1911:58;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;1999:4;1979:14;:17;1994:1;1979:17;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;2033:34;2046:17;;2065:1;2033:12;:34::i;:::-;2013:17;:54;;;;1844:230:::0;:::o;3336:117:11:-;3402:7;3428:9;:18;3438:7;3428:18;;;;;;;;;;;;;;;;3421:25;;3336:117;;;:::o;2331:85::-;2370:13;2402:7;2395:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2331:85;:::o;6220:266::-;6313:4;6329:129;6338:12;:10;:12::i;:::-;6352:7;6361:96;6400:15;6361:96;;;;;;;;;;;;;;;;;:11;:25;6373:12;:10;:12::i;:::-;6361:25;;;;;;;;;;;;;;;:34;6387:7;6361:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6329:8;:129::i;:::-;6475:4;6468:11;;6220:266;;;;:::o;3656:172::-;3742:4;3758:42;3768:12;:10;:12::i;:::-;3782:9;3793:6;3758:9;:42::i;:::-;3817:4;3810:11;;3656:172;;;;:::o;2232:302:44:-;1345:27;1361:10;1345:15;:27::i;:::-;1337:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2310:18:::1;2326:1;2310:15;:18::i;:::-;2302:53;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;2393:1;2373:17;;:21;2365:63;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;2458:5;2438:14;:17;2453:1;2438:17;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;2493:34;2506:17;;2525:1;2493:12;:34::i;:::-;2473:17;:54;;;;2232:302:::0;:::o;3886:149:11:-;3975:7;4001:11;:18;4013:5;4001:18;;;;;;;;;;;;;;;:27;4020:7;4001:27;;;;;;;;;;;;;;;;3994:34;;3886:149;;;;:::o;590:104:5:-;643:15;677:10;670:17;;590:104;:::o;9284:340:11:-;9402:1;9385:19;;:5;:19;;;;9377:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9482:1;9463:21;;:7;:21;;;;9455:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9564:6;9534:11;:18;9546:5;9534:18;;;;;;;;;;;;;;;:27;9553:7;9534:27;;;;;;;;;;;;;;;:36;;;;9601:7;9585:32;;9594:5;9585:32;;;9610:6;9585:32;;;;;;;;;;;;;;;;;;9284:340;;;:::o;6960:530::-;7083:1;7065:20;;:6;:20;;;;7057:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7166:1;7145:23;;:9;:23;;;;7137:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7219:47;7240:6;7248:9;7259:6;7219:20;:47::i;:::-;7297:71;7319:6;7297:71;;;;;;;;;;;;;;;;;:9;:17;7307:6;7297:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7277:9;:17;7287:6;7277:17;;;;;;;;;;;;;;;:91;;;;7401:32;7426:6;7401:9;:20;7411:9;7401:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7378:9;:20;7388:9;7378:20;;;;;;;;;;;;;;;:55;;;;7465:9;7448:35;;7457:6;7448:35;;;7476:6;7448:35;;;;;;;;;;;;;;;;;;6960:530;;;:::o;1746:187:39:-;1832:7;1864:1;1859;:6;;1867:12;1851:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1890:9;1906:1;1902;:5;1890:17;;1925:1;1918:8;;;1746:187;;;;;:::o;874:176::-;932:7;951:9;967:1;963;:5;951:17;;991:1;986;:6;;978:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;1035:8;;;874:176;;;;:::o;7761:370:11:-;7863:1;7844:21;;:7;:21;;;;7836:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7912:49;7941:1;7945:7;7954:6;7912:20;:49::i;:::-;7987:24;8004:6;7987:12;;:16;;:24;;;;:::i;:::-;7972:12;:39;;;;8042:30;8065:6;8042:9;:18;8052:7;8042:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;8021:9;:18;8031:7;8021:18;;;;;;;;;;;;;;;:51;;;;8108:7;8087:37;;8104:1;8087:37;;;8117:6;8087:37;;;;;;;;;;;;;;;;;;7761:370;;:::o;1321:134:39:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1398:50;;1321:134;;;;:::o;806:309:13:-;914:44;941:4;947:2;951:6;914:26;:44::i;:::-;989:1;973:18;;:4;:18;;;969:140;;;1064:4;;1054:6;1038:13;:11;:13::i;:::-;:22;:30;;1030:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;969:140;806:309;;;:::o;10622:92:11:-;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport \"./ERC20Capped.sol\";\n\n/** @title Extension of {ERC20} that adds a cap to the supply of tokens. */\ncontract WebaverseERC20 is ERC20Capped {\n    mapping(address => bool) internal allowedMinters; // whether anyone can mint tokens (should be sidechain only)\n    uint256 internal numAllowedMinters;\n\n    /**\n     * @dev Create a new fungible token\n     * @param name Name of the token (default is FT)\n     * @param symbol Token identifier (default is SILK)\n     * @param cap Sets the token market cap. This value is immutable, it can only be\n     * set once during construction.\n     * Default cap: 2147483648000000000000000000 or (2**31) + '000000000000000000'\n     */\n    constructor(\n        string memory name,\n        string memory symbol,\n        uint256 cap\n    ) public ERC20(name, symbol) ERC20Capped(cap) {\n        allowedMinters[msg.sender] = true;\n        numAllowedMinters = 1;\n    }\n\n    /**\n     * @dev Test if an address is allowed to mint ERC20 tokens\n     * @param a address to test\n     * @return true if address is allowed to mint\n     */\n    function isAllowedMinter(address a) public view returns (bool) {\n        return allowedMinters[a];\n    }\n\n    /** @dev Modify functions to ensure only allowed minters can mint */\n    modifier onlyMinter() {\n        require(isAllowedMinter(msg.sender), \"sender is not a minter\");\n        _; // Inject modified function\n    }\n\n    /**\n     * @dev Mint ERC20 tokens\n     * @param account Tokens created for this account\n     * @param amount Number of tokens to mint\n     */\n    function mint(address account, uint256 amount) public onlyMinter() {\n        _mint(account, amount);\n    }\n\n    /**\n     * @dev Add an account to the list of accounts allowed to create ERC20 tokens\n     * @param a address to whitelist\n     */\n    function addAllowedMinter(address a) public onlyMinter() {\n        require(!isAllowedMinter(a), \"target is already a minter\");\n        allowedMinters[a] = true;\n        numAllowedMinters = SafeMath.add(numAllowedMinters, 1);\n    }\n\n    /**\n     * @dev Remove an account from the list of accounts allowed to create ERC20 tokens\n     * @param a address to remove from whitelist\n     */\n    function removeAllowedMinter(address a) public onlyMinter() {\n        require(isAllowedMinter(a), \"target is not a minter\");\n        require(numAllowedMinters > 1, \"cannot remove the only minter\");\n        allowedMinters[a] = false;\n        numAllowedMinters = SafeMath.sub(numAllowedMinters, 1);\n    }\n}\n",
  "sourcePath": "/home/beast/Documents/GitHub/contracts/ethereum/WebaverseERC20.sol",
  "ast": {
    "absolutePath": "/home/beast/Documents/GitHub/contracts/ethereum/WebaverseERC20.sol",
    "exportedSymbols": {
      "WebaverseERC20": [
        6752
      ]
    },
    "id": 6753,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6602,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:44"
      },
      {
        "absolutePath": "/home/beast/Documents/GitHub/contracts/ethereum/ERC20Capped.sol",
        "file": "./ERC20Capped.sol",
        "id": 6603,
        "nodeType": "ImportDirective",
        "scope": 6753,
        "sourceUnit": 1893,
        "src": "57:27:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6605,
              "name": "ERC20Capped",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1892,
              "src": "189:11:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Capped_$1892",
                "typeString": "contract ERC20Capped"
              }
            },
            "id": 6606,
            "nodeType": "InheritanceSpecifier",
            "src": "189:11:44"
          }
        ],
        "contractDependencies": [
          810,
          1762,
          1892,
          4669
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 6604,
          "nodeType": "StructuredDocumentation",
          "src": "86:75:44",
          "text": "@title Extension of {ERC20} that adds a cap to the supply of tokens. "
        },
        "fullyImplemented": true,
        "id": 6752,
        "linearizedBaseContracts": [
          6752,
          1892,
          1762,
          4669,
          810
        ],
        "name": "WebaverseERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6610,
            "mutability": "mutable",
            "name": "allowedMinters",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6752,
            "src": "207:48:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 6609,
              "keyType": {
                "id": 6607,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "215:7:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "207:24:44",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 6608,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "226:4:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6612,
            "mutability": "mutable",
            "name": "numAllowedMinters",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6752,
            "src": "322:34:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6611,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "322:7:44",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6640,
              "nodeType": "Block",
              "src": "874:81:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 6629,
                        "name": "allowedMinters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6610,
                        "src": "884:14:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 6632,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6630,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "899:3:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "899:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "884:26:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 6633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "913:4:44",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "884:33:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6635,
                  "nodeType": "ExpressionStatement",
                  "src": "884:33:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6636,
                      "name": "numAllowedMinters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6612,
                      "src": "927:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 6637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "947:1:44",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "927:21:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6639,
                  "nodeType": "ExpressionStatement",
                  "src": "927:21:44"
                }
              ]
            },
            "documentation": {
              "id": 6613,
              "nodeType": "StructuredDocumentation",
              "src": "363:365:44",
              "text": " @dev Create a new fungible token\n @param name Name of the token (default is FT)\n @param symbol Token identifier (default is SILK)\n @param cap Sets the token market cap. This value is immutable, it can only be\n set once during construction.\n Default cap: 2147483648000000000000000000 or (2**31) + '000000000000000000'"
            },
            "id": 6641,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 6622,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6615,
                    "src": "843:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6623,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6617,
                    "src": "849:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 6624,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6621,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1762,
                  "src": "837:5:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$1762_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "837:19:44"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 6626,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6619,
                    "src": "869:3:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 6627,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6625,
                  "name": "ERC20Capped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1892,
                  "src": "857:11:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Capped_$1892_$",
                    "typeString": "type(contract ERC20Capped)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "857:16:44"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6615,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6641,
                  "src": "754:18:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6614,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "754:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6617,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6641,
                  "src": "782:20:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6616,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "782:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6619,
                  "mutability": "mutable",
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6641,
                  "src": "812:11:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6618,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "812:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "744:85:44"
            },
            "returnParameters": {
              "id": 6628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "874:0:44"
            },
            "scope": 6752,
            "src": "733:222:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6653,
              "nodeType": "Block",
              "src": "1185:41:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 6649,
                      "name": "allowedMinters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6610,
                      "src": "1202:14:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 6651,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 6650,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6644,
                      "src": "1217:1:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1202:17:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6648,
                  "id": 6652,
                  "nodeType": "Return",
                  "src": "1195:24:44"
                }
              ]
            },
            "documentation": {
              "id": 6642,
              "nodeType": "StructuredDocumentation",
              "src": "961:156:44",
              "text": " @dev Test if an address is allowed to mint ERC20 tokens\n @param a address to test\n @return true if address is allowed to mint"
            },
            "functionSelector": "1f3b4c90",
            "id": 6654,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAllowedMinter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6644,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6654,
                  "src": "1147:9:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1147:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1146:11:44"
            },
            "returnParameters": {
              "id": 6648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6647,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6654,
                  "src": "1179:4:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6646,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1178:6:44"
            },
            "scope": 6752,
            "src": "1122:104:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6666,
              "nodeType": "Block",
              "src": "1327:118:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6659,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1361:3:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1361:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 6658,
                          "name": "isAllowedMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6654,
                          "src": "1345:15:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 6661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1345:27:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "73656e646572206973206e6f742061206d696e746572",
                        "id": 6662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1374:24:44",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36a7265fec395e681681eb6551fa849872c54da669e453b371648e07a8238958",
                          "typeString": "literal_string \"sender is not a minter\""
                        },
                        "value": "sender is not a minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36a7265fec395e681681eb6551fa849872c54da669e453b371648e07a8238958",
                          "typeString": "literal_string \"sender is not a minter\""
                        }
                      ],
                      "id": 6657,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1337:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1337:62:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6664,
                  "nodeType": "ExpressionStatement",
                  "src": "1337:62:44"
                },
                {
                  "id": 6665,
                  "nodeType": "PlaceholderStatement",
                  "src": "1409:1:44"
                }
              ]
            },
            "documentation": {
              "id": 6655,
              "nodeType": "StructuredDocumentation",
              "src": "1232:68:44",
              "text": "@dev Modify functions to ensure only allowed minters can mint "
            },
            "id": 6667,
            "name": "onlyMinter",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 6656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1324:2:44"
            },
            "src": "1305:140:44",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6682,
              "nodeType": "Block",
              "src": "1664:39:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6678,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6670,
                        "src": "1680:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6679,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6672,
                        "src": "1689:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6677,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1638,
                      "src": "1674:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1674:22:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6681,
                  "nodeType": "ExpressionStatement",
                  "src": "1674:22:44"
                }
              ]
            },
            "documentation": {
              "id": 6668,
              "nodeType": "StructuredDocumentation",
              "src": "1451:141:44",
              "text": " @dev Mint ERC20 tokens\n @param account Tokens created for this account\n @param amount Number of tokens to mint"
            },
            "functionSelector": "40c10f19",
            "id": 6683,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6675,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6674,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6667,
                  "src": "1651:10:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1651:12:44"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6670,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6683,
                  "src": "1611:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6669,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1611:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6672,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6683,
                  "src": "1628:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1628:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1610:33:44"
            },
            "returnParameters": {
              "id": 6676,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1664:0:44"
            },
            "scope": 6752,
            "src": "1597:106:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6713,
              "nodeType": "Block",
              "src": "1901:173:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1919:19:44",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 6693,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6686,
                              "src": "1936:1:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 6692,
                            "name": "isAllowedMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6654,
                            "src": "1920:15:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 6694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1920:18:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74617267657420697320616c72656164792061206d696e746572",
                        "id": 6696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1940:28:44",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_02dde13d2218b1919576ffa7f0dd565114c9761f0cd874f38ee5904ef068f9dc",
                          "typeString": "literal_string \"target is already a minter\""
                        },
                        "value": "target is already a minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_02dde13d2218b1919576ffa7f0dd565114c9761f0cd874f38ee5904ef068f9dc",
                          "typeString": "literal_string \"target is already a minter\""
                        }
                      ],
                      "id": 6691,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1911:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1911:58:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6698,
                  "nodeType": "ExpressionStatement",
                  "src": "1911:58:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 6699,
                        "name": "allowedMinters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6610,
                        "src": "1979:14:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 6701,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 6700,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6686,
                        "src": "1994:1:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1979:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 6702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1999:4:44",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1979:24:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6704,
                  "nodeType": "ExpressionStatement",
                  "src": "1979:24:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6705,
                      "name": "numAllowedMinters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6612,
                      "src": "2013:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 6708,
                          "name": "numAllowedMinters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6612,
                          "src": "2046:17:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 6709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2065:1:44",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 6706,
                          "name": "SafeMath",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6151,
                          "src": "2033:8:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeMath_$6151_$",
                            "typeString": "type(library SafeMath)"
                          }
                        },
                        "id": 6707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5984,
                        "src": "2033:12:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 6710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2033:34:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2013:54:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6712,
                  "nodeType": "ExpressionStatement",
                  "src": "2013:54:44"
                }
              ]
            },
            "documentation": {
              "id": 6684,
              "nodeType": "StructuredDocumentation",
              "src": "1709:130:44",
              "text": " @dev Add an account to the list of accounts allowed to create ERC20 tokens\n @param a address to whitelist"
            },
            "functionSelector": "488603df",
            "id": 6714,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6689,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6688,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6667,
                  "src": "1888:10:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1888:12:44"
              }
            ],
            "name": "addAllowedMinter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6686,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6714,
                  "src": "1870:9:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6685,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1870:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1869:11:44"
            },
            "returnParameters": {
              "id": 6690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1901:0:44"
            },
            "scope": 6752,
            "src": "1844:230:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6750,
              "nodeType": "Block",
              "src": "2292:242:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 6724,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6717,
                            "src": "2326:1:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6723,
                          "name": "isAllowedMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6654,
                          "src": "2310:15:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 6725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2310:18:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "746172676574206973206e6f742061206d696e746572",
                        "id": 6726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2330:24:44",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e55f897e5b18009ee667ac69e60431171d66392106e763c82d8299a807b3a2eb",
                          "typeString": "literal_string \"target is not a minter\""
                        },
                        "value": "target is not a minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e55f897e5b18009ee667ac69e60431171d66392106e763c82d8299a807b3a2eb",
                          "typeString": "literal_string \"target is not a minter\""
                        }
                      ],
                      "id": 6722,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2302:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2302:53:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6728,
                  "nodeType": "ExpressionStatement",
                  "src": "2302:53:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 6730,
                          "name": "numAllowedMinters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6612,
                          "src": "2373:17:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 6731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2393:1:44",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2373:21:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63616e6e6f742072656d6f766520746865206f6e6c79206d696e746572",
                        "id": 6733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2396:31:44",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e67df283d085fe967bccd3fdcb7212d2640f54d438429ddaafd80de600c8f7d5",
                          "typeString": "literal_string \"cannot remove the only minter\""
                        },
                        "value": "cannot remove the only minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e67df283d085fe967bccd3fdcb7212d2640f54d438429ddaafd80de600c8f7d5",
                          "typeString": "literal_string \"cannot remove the only minter\""
                        }
                      ],
                      "id": 6729,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2365:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2365:63:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6735,
                  "nodeType": "ExpressionStatement",
                  "src": "2365:63:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 6736,
                        "name": "allowedMinters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6610,
                        "src": "2438:14:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 6738,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 6737,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6717,
                        "src": "2453:1:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2438:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 6739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2458:5:44",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2438:25:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6741,
                  "nodeType": "ExpressionStatement",
                  "src": "2438:25:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6742,
                      "name": "numAllowedMinters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6612,
                      "src": "2473:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 6745,
                          "name": "numAllowedMinters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6612,
                          "src": "2506:17:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 6746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2525:1:44",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 6743,
                          "name": "SafeMath",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6151,
                          "src": "2493:8:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeMath_$6151_$",
                            "typeString": "type(library SafeMath)"
                          }
                        },
                        "id": 6744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6001,
                        "src": "2493:12:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 6747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2493:34:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2473:54:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6749,
                  "nodeType": "ExpressionStatement",
                  "src": "2473:54:44"
                }
              ]
            },
            "documentation": {
              "id": 6715,
              "nodeType": "StructuredDocumentation",
              "src": "2080:147:44",
              "text": " @dev Remove an account from the list of accounts allowed to create ERC20 tokens\n @param a address to remove from whitelist"
            },
            "functionSelector": "bad39b96",
            "id": 6751,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6720,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6719,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6667,
                  "src": "2279:10:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2279:12:44"
              }
            ],
            "name": "removeAllowedMinter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6717,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6751,
                  "src": "2261:9:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6716,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2261:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2260:11:44"
            },
            "returnParameters": {
              "id": 6721,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2292:0:44"
            },
            "scope": 6752,
            "src": "2232:302:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6753,
        "src": "162:2374:44"
      }
    ],
    "src": "32:2505:44"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/beast/Documents/GitHub/contracts/ethereum/WebaverseERC20.sol",
      "exportedSymbols": {
        "WebaverseERC20": [
          6752
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.6",
            ".0"
          ]
        },
        "id": 6602,
        "name": "PragmaDirective",
        "src": "32:23:44"
      },
      {
        "attributes": {
          "SourceUnit": 1893,
          "absolutePath": "/home/beast/Documents/GitHub/contracts/ethereum/ERC20Capped.sol",
          "file": "./ERC20Capped.sol",
          "scope": 6753,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6603,
        "name": "ImportDirective",
        "src": "57:27:44"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            810,
            1762,
            1892,
            4669
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6752,
            1892,
            1762,
            4669,
            810
          ],
          "name": "WebaverseERC20",
          "scope": 6753
        },
        "children": [
          {
            "attributes": {
              "text": "@title Extension of {ERC20} that adds a cap to the supply of tokens. "
            },
            "id": 6604,
            "name": "StructuredDocumentation",
            "src": "86:75:44"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20Capped",
                  "referencedDeclaration": 1892,
                  "type": "contract ERC20Capped"
                },
                "id": 6605,
                "name": "UserDefinedTypeName",
                "src": "189:11:44"
              }
            ],
            "id": 6606,
            "name": "InheritanceSpecifier",
            "src": "189:11:44"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "allowedMinters",
              "overrides": null,
              "scope": 6752,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => bool)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 6607,
                    "name": "ElementaryTypeName",
                    "src": "215:7:44"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 6608,
                    "name": "ElementaryTypeName",
                    "src": "226:4:44"
                  }
                ],
                "id": 6609,
                "name": "Mapping",
                "src": "207:24:44"
              }
            ],
            "id": 6610,
            "name": "VariableDeclaration",
            "src": "207:48:44"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "numAllowedMinters",
              "overrides": null,
              "scope": 6752,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 6611,
                "name": "ElementaryTypeName",
                "src": "322:7:44"
              }
            ],
            "id": 6612,
            "name": "VariableDeclaration",
            "src": "322:34:44"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "overrides": null,
              "scope": 6752,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Create a new fungible token\n @param name Name of the token (default is FT)\n @param symbol Token identifier (default is SILK)\n @param cap Sets the token market cap. This value is immutable, it can only be\n set once during construction.\n Default cap: 2147483648000000000000000000 or (2**31) + '000000000000000000'"
                },
                "id": 6613,
                "name": "StructuredDocumentation",
                "src": "363:365:44"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "name",
                      "overrides": null,
                      "scope": 6641,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 6614,
                        "name": "ElementaryTypeName",
                        "src": "754:6:44"
                      }
                    ],
                    "id": 6615,
                    "name": "VariableDeclaration",
                    "src": "754:18:44"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "symbol",
                      "overrides": null,
                      "scope": 6641,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 6616,
                        "name": "ElementaryTypeName",
                        "src": "782:6:44"
                      }
                    ],
                    "id": 6617,
                    "name": "VariableDeclaration",
                    "src": "782:20:44"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "cap",
                      "overrides": null,
                      "scope": 6641,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 6618,
                        "name": "ElementaryTypeName",
                        "src": "812:7:44"
                      }
                    ],
                    "id": 6619,
                    "name": "VariableDeclaration",
                    "src": "812:11:44"
                  }
                ],
                "id": 6620,
                "name": "ParameterList",
                "src": "744:85:44"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6628,
                "name": "ParameterList",
                "src": "874:0:44"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1762,
                      "type": "type(contract ERC20)",
                      "value": "ERC20"
                    },
                    "id": 6621,
                    "name": "Identifier",
                    "src": "837:5:44"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6615,
                      "type": "string memory",
                      "value": "name"
                    },
                    "id": 6622,
                    "name": "Identifier",
                    "src": "843:4:44"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6617,
                      "type": "string memory",
                      "value": "symbol"
                    },
                    "id": 6623,
                    "name": "Identifier",
                    "src": "849:6:44"
                  }
                ],
                "id": 6624,
                "name": "ModifierInvocation",
                "src": "837:19:44"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1892,
                      "type": "type(contract ERC20Capped)",
                      "value": "ERC20Capped"
                    },
                    "id": 6625,
                    "name": "Identifier",
                    "src": "857:11:44"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6619,
                      "type": "uint256",
                      "value": "cap"
                    },
                    "id": 6626,
                    "name": "Identifier",
                    "src": "869:3:44"
                  }
                ],
                "id": 6627,
                "name": "ModifierInvocation",
                "src": "857:16:44"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6610,
                                  "type": "mapping(address => bool)",
                                  "value": "allowedMinters"
                                },
                                "id": 6629,
                                "name": "Identifier",
                                "src": "884:14:44"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 6630,
                                    "name": "Identifier",
                                    "src": "899:3:44"
                                  }
                                ],
                                "id": 6631,
                                "name": "MemberAccess",
                                "src": "899:10:44"
                              }
                            ],
                            "id": 6632,
                            "name": "IndexAccess",
                            "src": "884:26:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 6633,
                            "name": "Literal",
                            "src": "913:4:44"
                          }
                        ],
                        "id": 6634,
                        "name": "Assignment",
                        "src": "884:33:44"
                      }
                    ],
                    "id": 6635,
                    "name": "ExpressionStatement",
                    "src": "884:33:44"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6612,
                              "type": "uint256",
                              "value": "numAllowedMinters"
                            },
                            "id": 6636,
                            "name": "Identifier",
                            "src": "927:17:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 6637,
                            "name": "Literal",
                            "src": "947:1:44"
                          }
                        ],
                        "id": 6638,
                        "name": "Assignment",
                        "src": "927:21:44"
                      }
                    ],
                    "id": 6639,
                    "name": "ExpressionStatement",
                    "src": "927:21:44"
                  }
                ],
                "id": 6640,
                "name": "Block",
                "src": "874:81:44"
              }
            ],
            "id": 6641,
            "name": "FunctionDefinition",
            "src": "733:222:44"
          },
          {
            "attributes": {
              "functionSelector": "1f3b4c90",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "isAllowedMinter",
              "overrides": null,
              "scope": 6752,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Test if an address is allowed to mint ERC20 tokens\n @param a address to test\n @return true if address is allowed to mint"
                },
                "id": 6642,
                "name": "StructuredDocumentation",
                "src": "961:156:44"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "a",
                      "overrides": null,
                      "scope": 6654,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 6643,
                        "name": "ElementaryTypeName",
                        "src": "1147:7:44"
                      }
                    ],
                    "id": 6644,
                    "name": "VariableDeclaration",
                    "src": "1147:9:44"
                  }
                ],
                "id": 6645,
                "name": "ParameterList",
                "src": "1146:11:44"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 6654,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 6646,
                        "name": "ElementaryTypeName",
                        "src": "1179:4:44"
                      }
                    ],
                    "id": 6647,
                    "name": "VariableDeclaration",
                    "src": "1179:4:44"
                  }
                ],
                "id": 6648,
                "name": "ParameterList",
                "src": "1178:6:44"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 6648
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6610,
                              "type": "mapping(address => bool)",
                              "value": "allowedMinters"
                            },
                            "id": 6649,
                            "name": "Identifier",
                            "src": "1202:14:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6644,
                              "type": "address",
                              "value": "a"
                            },
                            "id": 6650,
                            "name": "Identifier",
                            "src": "1217:1:44"
                          }
                        ],
                        "id": 6651,
                        "name": "IndexAccess",
                        "src": "1202:17:44"
                      }
                    ],
                    "id": 6652,
                    "name": "Return",
                    "src": "1195:24:44"
                  }
                ],
                "id": 6653,
                "name": "Block",
                "src": "1185:41:44"
              }
            ],
            "id": 6654,
            "name": "FunctionDefinition",
            "src": "1122:104:44"
          },
          {
            "attributes": {
              "name": "onlyMinter",
              "overrides": null,
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev Modify functions to ensure only allowed minters can mint "
                },
                "id": 6655,
                "name": "StructuredDocumentation",
                "src": "1232:68:44"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6656,
                "name": "ParameterList",
                "src": "1324:2:44"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_36a7265fec395e681681eb6551fa849872c54da669e453b371648e07a8238958",
                                  "typeString": "literal_string \"sender is not a minter\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 6657,
                            "name": "Identifier",
                            "src": "1337:7:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6654,
                                  "type": "function (address) view returns (bool)",
                                  "value": "isAllowedMinter"
                                },
                                "id": 6658,
                                "name": "Identifier",
                                "src": "1345:15:44"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 6659,
                                    "name": "Identifier",
                                    "src": "1361:3:44"
                                  }
                                ],
                                "id": 6660,
                                "name": "MemberAccess",
                                "src": "1361:10:44"
                              }
                            ],
                            "id": 6661,
                            "name": "FunctionCall",
                            "src": "1345:27:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "73656e646572206973206e6f742061206d696e746572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"sender is not a minter\"",
                              "value": "sender is not a minter"
                            },
                            "id": 6662,
                            "name": "Literal",
                            "src": "1374:24:44"
                          }
                        ],
                        "id": 6663,
                        "name": "FunctionCall",
                        "src": "1337:62:44"
                      }
                    ],
                    "id": 6664,
                    "name": "ExpressionStatement",
                    "src": "1337:62:44"
                  },
                  {
                    "id": 6665,
                    "name": "PlaceholderStatement",
                    "src": "1409:1:44"
                  }
                ],
                "id": 6666,
                "name": "Block",
                "src": "1327:118:44"
              }
            ],
            "id": 6667,
            "name": "ModifierDefinition",
            "src": "1305:140:44"
          },
          {
            "attributes": {
              "functionSelector": "40c10f19",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "mint",
              "overrides": null,
              "scope": 6752,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Mint ERC20 tokens\n @param account Tokens created for this account\n @param amount Number of tokens to mint"
                },
                "id": 6668,
                "name": "StructuredDocumentation",
                "src": "1451:141:44"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "account",
                      "overrides": null,
                      "scope": 6683,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 6669,
                        "name": "ElementaryTypeName",
                        "src": "1611:7:44"
                      }
                    ],
                    "id": 6670,
                    "name": "VariableDeclaration",
                    "src": "1611:15:44"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "overrides": null,
                      "scope": 6683,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 6671,
                        "name": "ElementaryTypeName",
                        "src": "1628:7:44"
                      }
                    ],
                    "id": 6672,
                    "name": "VariableDeclaration",
                    "src": "1628:14:44"
                  }
                ],
                "id": 6673,
                "name": "ParameterList",
                "src": "1610:33:44"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6676,
                "name": "ParameterList",
                "src": "1664:0:44"
              },
              {
                "attributes": {
                  "arguments": [
                    null
                  ]
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6667,
                      "type": "modifier ()",
                      "value": "onlyMinter"
                    },
                    "id": 6674,
                    "name": "Identifier",
                    "src": "1651:10:44"
                  }
                ],
                "id": 6675,
                "name": "ModifierInvocation",
                "src": "1651:12:44"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1638,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 6677,
                            "name": "Identifier",
                            "src": "1674:5:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6670,
                              "type": "address",
                              "value": "account"
                            },
                            "id": 6678,
                            "name": "Identifier",
                            "src": "1680:7:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6672,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 6679,
                            "name": "Identifier",
                            "src": "1689:6:44"
                          }
                        ],
                        "id": 6680,
                        "name": "FunctionCall",
                        "src": "1674:22:44"
                      }
                    ],
                    "id": 6681,
                    "name": "ExpressionStatement",
                    "src": "1674:22:44"
                  }
                ],
                "id": 6682,
                "name": "Block",
                "src": "1664:39:44"
              }
            ],
            "id": 6683,
            "name": "FunctionDefinition",
            "src": "1597:106:44"
          },
          {
            "attributes": {
              "functionSelector": "488603df",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "addAllowedMinter",
              "overrides": null,
              "scope": 6752,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Add an account to the list of accounts allowed to create ERC20 tokens\n @param a address to whitelist"
                },
                "id": 6684,
                "name": "StructuredDocumentation",
                "src": "1709:130:44"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "a",
                      "overrides": null,
                      "scope": 6714,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 6685,
                        "name": "ElementaryTypeName",
                        "src": "1870:7:44"
                      }
                    ],
                    "id": 6686,
                    "name": "VariableDeclaration",
                    "src": "1870:9:44"
                  }
                ],
                "id": 6687,
                "name": "ParameterList",
                "src": "1869:11:44"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6690,
                "name": "ParameterList",
                "src": "1901:0:44"
              },
              {
                "attributes": {
                  "arguments": [
                    null
                  ]
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6667,
                      "type": "modifier ()",
                      "value": "onlyMinter"
                    },
                    "id": 6688,
                    "name": "Identifier",
                    "src": "1888:10:44"
                  }
                ],
                "id": 6689,
                "name": "ModifierInvocation",
                "src": "1888:12:44"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_02dde13d2218b1919576ffa7f0dd565114c9761f0cd874f38ee5904ef068f9dc",
                                  "typeString": "literal_string \"target is already a minter\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 6691,
                            "name": "Identifier",
                            "src": "1911:7:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "bool",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 6654,
                                      "type": "function (address) view returns (bool)",
                                      "value": "isAllowedMinter"
                                    },
                                    "id": 6692,
                                    "name": "Identifier",
                                    "src": "1920:15:44"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 6686,
                                      "type": "address",
                                      "value": "a"
                                    },
                                    "id": 6693,
                                    "name": "Identifier",
                                    "src": "1936:1:44"
                                  }
                                ],
                                "id": 6694,
                                "name": "FunctionCall",
                                "src": "1920:18:44"
                              }
                            ],
                            "id": 6695,
                            "name": "UnaryOperation",
                            "src": "1919:19:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74617267657420697320616c72656164792061206d696e746572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"target is already a minter\"",
                              "value": "target is already a minter"
                            },
                            "id": 6696,
                            "name": "Literal",
                            "src": "1940:28:44"
                          }
                        ],
                        "id": 6697,
                        "name": "FunctionCall",
                        "src": "1911:58:44"
                      }
                    ],
                    "id": 6698,
                    "name": "ExpressionStatement",
                    "src": "1911:58:44"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6610,
                                  "type": "mapping(address => bool)",
                                  "value": "allowedMinters"
                                },
                                "id": 6699,
                                "name": "Identifier",
                                "src": "1979:14:44"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6686,
                                  "type": "address",
                                  "value": "a"
                                },
                                "id": 6700,
                                "name": "Identifier",
                                "src": "1994:1:44"
                              }
                            ],
                            "id": 6701,
                            "name": "IndexAccess",
                            "src": "1979:17:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 6702,
                            "name": "Literal",
                            "src": "1999:4:44"
                          }
                        ],
                        "id": 6703,
                        "name": "Assignment",
                        "src": "1979:24:44"
                      }
                    ],
                    "id": 6704,
                    "name": "ExpressionStatement",
                    "src": "1979:24:44"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6612,
                              "type": "uint256",
                              "value": "numAllowedMinters"
                            },
                            "id": 6705,
                            "name": "Identifier",
                            "src": "2013:17:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "add",
                                  "referencedDeclaration": 5984,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 6151,
                                      "type": "type(library SafeMath)",
                                      "value": "SafeMath"
                                    },
                                    "id": 6706,
                                    "name": "Identifier",
                                    "src": "2033:8:44"
                                  }
                                ],
                                "id": 6707,
                                "name": "MemberAccess",
                                "src": "2033:12:44"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6612,
                                  "type": "uint256",
                                  "value": "numAllowedMinters"
                                },
                                "id": 6708,
                                "name": "Identifier",
                                "src": "2046:17:44"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 6709,
                                "name": "Literal",
                                "src": "2065:1:44"
                              }
                            ],
                            "id": 6710,
                            "name": "FunctionCall",
                            "src": "2033:34:44"
                          }
                        ],
                        "id": 6711,
                        "name": "Assignment",
                        "src": "2013:54:44"
                      }
                    ],
                    "id": 6712,
                    "name": "ExpressionStatement",
                    "src": "2013:54:44"
                  }
                ],
                "id": 6713,
                "name": "Block",
                "src": "1901:173:44"
              }
            ],
            "id": 6714,
            "name": "FunctionDefinition",
            "src": "1844:230:44"
          },
          {
            "attributes": {
              "functionSelector": "bad39b96",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "removeAllowedMinter",
              "overrides": null,
              "scope": 6752,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Remove an account from the list of accounts allowed to create ERC20 tokens\n @param a address to remove from whitelist"
                },
                "id": 6715,
                "name": "StructuredDocumentation",
                "src": "2080:147:44"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "a",
                      "overrides": null,
                      "scope": 6751,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 6716,
                        "name": "ElementaryTypeName",
                        "src": "2261:7:44"
                      }
                    ],
                    "id": 6717,
                    "name": "VariableDeclaration",
                    "src": "2261:9:44"
                  }
                ],
                "id": 6718,
                "name": "ParameterList",
                "src": "2260:11:44"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6721,
                "name": "ParameterList",
                "src": "2292:0:44"
              },
              {
                "attributes": {
                  "arguments": [
                    null
                  ]
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6667,
                      "type": "modifier ()",
                      "value": "onlyMinter"
                    },
                    "id": 6719,
                    "name": "Identifier",
                    "src": "2279:10:44"
                  }
                ],
                "id": 6720,
                "name": "ModifierInvocation",
                "src": "2279:12:44"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e55f897e5b18009ee667ac69e60431171d66392106e763c82d8299a807b3a2eb",
                                  "typeString": "literal_string \"target is not a minter\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 6722,
                            "name": "Identifier",
                            "src": "2302:7:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6654,
                                  "type": "function (address) view returns (bool)",
                                  "value": "isAllowedMinter"
                                },
                                "id": 6723,
                                "name": "Identifier",
                                "src": "2310:15:44"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6717,
                                  "type": "address",
                                  "value": "a"
                                },
                                "id": 6724,
                                "name": "Identifier",
                                "src": "2326:1:44"
                              }
                            ],
                            "id": 6725,
                            "name": "FunctionCall",
                            "src": "2310:18:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "746172676574206973206e6f742061206d696e746572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"target is not a minter\"",
                              "value": "target is not a minter"
                            },
                            "id": 6726,
                            "name": "Literal",
                            "src": "2330:24:44"
                          }
                        ],
                        "id": 6727,
                        "name": "FunctionCall",
                        "src": "2302:53:44"
                      }
                    ],
                    "id": 6728,
                    "name": "ExpressionStatement",
                    "src": "2302:53:44"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e67df283d085fe967bccd3fdcb7212d2640f54d438429ddaafd80de600c8f7d5",
                                  "typeString": "literal_string \"cannot remove the only minter\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 6729,
                            "name": "Identifier",
                            "src": "2365:7:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6612,
                                  "type": "uint256",
                                  "value": "numAllowedMinters"
                                },
                                "id": 6730,
                                "name": "Identifier",
                                "src": "2373:17:44"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 6731,
                                "name": "Literal",
                                "src": "2393:1:44"
                              }
                            ],
                            "id": 6732,
                            "name": "BinaryOperation",
                            "src": "2373:21:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "63616e6e6f742072656d6f766520746865206f6e6c79206d696e746572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"cannot remove the only minter\"",
                              "value": "cannot remove the only minter"
                            },
                            "id": 6733,
                            "name": "Literal",
                            "src": "2396:31:44"
                          }
                        ],
                        "id": 6734,
                        "name": "FunctionCall",
                        "src": "2365:63:44"
                      }
                    ],
                    "id": 6735,
                    "name": "ExpressionStatement",
                    "src": "2365:63:44"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6610,
                                  "type": "mapping(address => bool)",
                                  "value": "allowedMinters"
                                },
                                "id": 6736,
                                "name": "Identifier",
                                "src": "2438:14:44"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6717,
                                  "type": "address",
                                  "value": "a"
                                },
                                "id": 6737,
                                "name": "Identifier",
                                "src": "2453:1:44"
                              }
                            ],
                            "id": 6738,
                            "name": "IndexAccess",
                            "src": "2438:17:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "66616c7365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "false"
                            },
                            "id": 6739,
                            "name": "Literal",
                            "src": "2458:5:44"
                          }
                        ],
                        "id": 6740,
                        "name": "Assignment",
                        "src": "2438:25:44"
                      }
                    ],
                    "id": 6741,
                    "name": "ExpressionStatement",
                    "src": "2438:25:44"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6612,
                              "type": "uint256",
                              "value": "numAllowedMinters"
                            },
                            "id": 6742,
                            "name": "Identifier",
                            "src": "2473:17:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sub",
                                  "referencedDeclaration": 6001,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 6151,
                                      "type": "type(library SafeMath)",
                                      "value": "SafeMath"
                                    },
                                    "id": 6743,
                                    "name": "Identifier",
                                    "src": "2493:8:44"
                                  }
                                ],
                                "id": 6744,
                                "name": "MemberAccess",
                                "src": "2493:12:44"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6612,
                                  "type": "uint256",
                                  "value": "numAllowedMinters"
                                },
                                "id": 6745,
                                "name": "Identifier",
                                "src": "2506:17:44"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 6746,
                                "name": "Literal",
                                "src": "2525:1:44"
                              }
                            ],
                            "id": 6747,
                            "name": "FunctionCall",
                            "src": "2493:34:44"
                          }
                        ],
                        "id": 6748,
                        "name": "Assignment",
                        "src": "2473:54:44"
                      }
                    ],
                    "id": 6749,
                    "name": "ExpressionStatement",
                    "src": "2473:54:44"
                  }
                ],
                "id": 6750,
                "name": "Block",
                "src": "2292:242:44"
              }
            ],
            "id": 6751,
            "name": "FunctionDefinition",
            "src": "2232:302:44"
          }
        ],
        "id": 6752,
        "name": "ContractDefinition",
        "src": "162:2374:44"
      }
    ],
    "id": 6753,
    "name": "SourceUnit",
    "src": "32:2505:44"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-23T05:08:06.304Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addAllowedMinter(address)": {
        "details": "Add an account to the list of accounts allowed to create ERC20 tokens",
        "params": {
          "a": "address to whitelist"
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "cap()": {
        "details": "Returns the cap on the token's total supply."
      },
      "constructor": {
        "details": "Create a new fungible token",
        "params": {
          "cap": "Sets the token market cap. This value is immutable, it can only be set once during construction. Default cap: 2147483648000000000000000000 or (2**31) + '000000000000000000'",
          "name": "Name of the token (default is FT)",
          "symbol": "Token identifier (default is SILK)"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "isAllowedMinter(address)": {
        "details": "Test if an address is allowed to mint ERC20 tokens",
        "params": {
          "a": "address to test"
        },
        "returns": {
          "_0": "true if address is allowed to mint"
        }
      },
      "mint(address,uint256)": {
        "details": "Mint ERC20 tokens",
        "params": {
          "account": "Tokens created for this account",
          "amount": "Number of tokens to mint"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "removeAllowedMinter(address)": {
        "details": "Remove an account from the list of accounts allowed to create ERC20 tokens",
        "params": {
          "a": "address to remove from whitelist"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "title": "Extension of {ERC20} that adds a cap to the supply of tokens. ",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}